// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proz_WebApi.Data;

#nullable disable

namespace Proz_WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext_Desktop))]
    partial class ApplicationDbContext_DesktopModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Attendance_Recorder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("CheckInComment")
                        .HasMaxLength(350)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("CheckInStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeOnly>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<string>("CheckOutComment")
                        .HasMaxLength(350)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("CheckOutStatus")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeOnly?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<DateOnly>("DateOfAttendance")
                        .HasColumnType("date");

                    b.Property<Guid>("EmployeeDepartment_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDepartment_FK");

                    b.ToTable("AttendanceRecorder");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Audit_Logs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(350)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("Performed_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PerformerAccount_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TargetEntity_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PerformerAccount_FK");

                    b.HasIndex("TargetEntity_FK");

                    b.ToTable("AuditLogsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Breaks_Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("BreakEnd")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("BreakStart")
                        .HasColumnType("time");

                    b.Property<string>("BreakType")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Notes")
                        .HasMaxLength(350)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(350)");

                    b.Property<int>("Shift_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Shift_FK");

                    b.ToTable("BreaksTimeTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.CurrentAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentNumber")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Describe_The_Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double?>("Latitude_Coordinate")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude_Coordinate")
                        .HasColumnType("float");

                    b.Property<Guid>("PersonalInformation_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformation_FK")
                        .IsUnique();

                    b.ToTable("CurrentAddressTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.DepartmentContactMethods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("ContactDetail")
                        .IsRequired()
                        .HasMaxLength(320)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("ContactMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("Department_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Department_FK");

                    b.ToTable("DepartmentContactMethodsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<double>("DepartmentDefaultSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Manager_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentDepartment_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Manager_FK");

                    b.HasIndex("ParentDepartment_FK");

                    b.ToTable("DepartmentsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.EmployeeSalaryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EffectiveFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EffectiveTo")
                        .HasColumnType("date");

                    b.Property<Guid>("EmployeeDepartments_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDepartments_FK");

                    b.ToTable("EmployeeSalaryHistoryTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<double?>("Company_Bonus")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<Guid>("Department_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Employee_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<int>("Shift_FK")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("Department_FK");

                    b.HasIndex("Employee_FK");

                    b.HasIndex("Shift_FK");

                    b.ToTable("EmployeeDepartmentsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<Guid>("IdentityUsers_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUsers_FK")
                        .IsUnique();

                    b.ToTable("EmployeesTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityRolesDesktop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleColorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUserRolesDesktop", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastOnline")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedback_Types", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("FeedbackType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.ToTable("Feedback_Types");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("Employee_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FeedbackDescription")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("FeedbackTitle")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("FeedbackType_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("Employee_FK");

                    b.HasIndex("FeedbackType_FK");

                    b.ToTable("FeedbacksTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks_Answers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<Guid>("Feedback_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RespondentAccount_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Feedback_FK")
                        .IsUnique();

                    b.HasIndex("RespondentAccount_FK");

                    b.ToTable("FeedbacksAnswersTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Games_Model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("sold_copies")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Health_Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Allergies")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CountryCodeOfThePhone")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("EmergencyContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyContactPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MedicalConditions")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("PersonalInformation_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformation_FK")
                        .IsUnique();

                    b.ToTable("HealthInformationTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.LeaveRequests", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<bool?>("AgreedOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("DMStatus")
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("Decision_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentManagerComment")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("DepartmentManager_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("FinalStatus")
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FinalStatus_Comment")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("HandlerEmployee_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("HasSanctions")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDM")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateHR")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RequesterStatus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("Requester_Employee_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("StartDate")
                        .HasMaxLength(35)
                        .IsUnicode(true)
                        .HasColumnType("date");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentManager_FK");

                    b.HasIndex("HandlerEmployee_FK");

                    b.HasIndex("Requester_Employee_FK");

                    b.ToTable("LeaveRequestsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.LeaveRequestsHigherRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<bool?>("AgreedOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Decision_At")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("HREmployee_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HRStatus")
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("HR_Comment")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("HasSanctions")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateAdmin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RequesterStatus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("Requester_Employee_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("StartDate")
                        .HasMaxLength(35)
                        .IsUnicode(true)
                        .HasColumnType("date");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("HREmployee_FK");

                    b.HasIndex("Requester_Employee_FK");

                    b.ToTable("LeaveRequestsHigherRole");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.LoginHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("ExtendedIdentityUsersDesktop_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(39)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(39)");

                    b.Property<DateTime>("LoggedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ExtendedIdentityUsersDesktop_FK");

                    b.ToTable("LoginHistoryTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime?>("Seen_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Target_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Target_FK");

                    b.ToTable("NotificationsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Payment_Records", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<double>("Deduction")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<string>("DeductionNote")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("EmployeeDepartments_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("FixedBonus")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<string>("FixedBonusNote")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PaymentCounter")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PaymentDateCreatedAt")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PaymentPeriodEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PaymentPeriodStart")
                        .HasColumnType("date");

                    b.Property<double>("PerformanceBonus")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<string>("PerformanceBonusNote")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDepartments_FK");

                    b.ToTable("PaymentRecordsTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Performance_Recorder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<Guid>("EmployeeDepartment_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PerformanceRating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerComment")
                        .HasMaxLength(125)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(125)");

                    b.Property<Guid>("Reviewer_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDepartment_FK");

                    b.HasIndex("Reviewer_FK");

                    b.ToTable("PerformanceRecorderTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid>("IdentityUser_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LivingOnPrimaryPlace")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUser_FK")
                        .IsUnique();

                    b.ToTable("PersonalInformationTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Phone_Numbers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NumberType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("PersonalInformation_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInformation_FK");

                    b.ToTable("PersonalPhoneNumbersTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.RefreshTokenDesktop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("TokenHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserFK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserFK");

                    b.ToTable("RefreshTokensTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Salary_Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateOnly>("CurrentPeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CurrentPeriodStartDate")
                        .HasColumnType("date");

                    b.Property<double>("EmployeeBonus")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<Guid>("EmployeeDepartment_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Employee_Deduction")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<int>("PaymentCounter")
                        .HasColumnType("int");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeDepartment_FK")
                        .IsUnique();

                    b.ToTable("SalaryScheduleTable");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ShiftInformationTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ShiftType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<TimeOnly>("Shift_Ends")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("Shift_Starts")
                        .HasColumnType("time");

                    b.Property<int?>("TotalHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShiftInformationTable");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityRolesDesktop", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Attendance_Recorder", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", "EmployeeDepartmentNA")
                        .WithMany("AttendanceRecordersNA")
                        .HasForeignKey("EmployeeDepartment_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDepartmentNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Audit_Logs", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "PerformerAccountNA")
                        .WithMany("AuditLogsNA")
                        .HasForeignKey("PerformerAccount_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", "TargetEntityNA")
                        .WithMany("Audit_LogsNA")
                        .HasForeignKey("TargetEntity_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PerformerAccountNA");

                    b.Navigation("TargetEntityNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Breaks_Time", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ShiftInformationTable", "ShiftNA")
                        .WithMany("BreaksTimeNA")
                        .HasForeignKey("Shift_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.CurrentAddress", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", "PersonalInformationNA")
                        .WithOne("CurrentAddressNA")
                        .HasForeignKey("Proz_WebApi.Models.DesktopModels.DatabaseTables.CurrentAddress", "PersonalInformation_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInformationNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.DepartmentContactMethods", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Departments", "Department")
                        .WithMany("DepartmentContactMethodsNA")
                        .HasForeignKey("Department_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Departments", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "ManagerNA")
                        .WithMany("ManagerAtNA")
                        .HasForeignKey("Manager_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Departments", "ParentDepartmentNA")
                        .WithMany("SubDepartmentsNA")
                        .HasForeignKey("ParentDepartment_FK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ManagerNA");

                    b.Navigation("ParentDepartmentNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.EmployeeSalaryHistory", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", "EmployeeDepartmentsNA")
                        .WithMany("EmployeeSalaryHistoryNA")
                        .HasForeignKey("EmployeeDepartments_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDepartmentsNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Departments", "DepartmentNA")
                        .WithMany()
                        .HasForeignKey("Department_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "EmployeeNA")
                        .WithMany()
                        .HasForeignKey("Employee_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ShiftInformationTable", "ShiftNA")
                        .WithMany("EmployeeDepartmentsNA")
                        .HasForeignKey("Shift_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentNA");

                    b.Navigation("EmployeeNA");

                    b.Navigation("ShiftNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", "IdentityUserNA")
                        .WithOne("EmployeesNA")
                        .HasForeignKey("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "IdentityUsers_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUserNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUserRolesDesktop", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityRolesDesktop", "RoleNA")
                        .WithMany("UserRolesNA")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", "UserNA")
                        .WithMany("UserRolesNA")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleNA");

                    b.Navigation("UserNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "EmployeeNA")
                        .WithMany("FeedbacksNA")
                        .HasForeignKey("Employee_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedback_Types", "FeedbackTypeNA")
                        .WithMany("FeedbacksNA")
                        .HasForeignKey("FeedbackType_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeNA");

                    b.Navigation("FeedbackTypeNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks_Answers", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks", "FeedbackNA")
                        .WithOne("FeedbacksAnswerNA")
                        .HasForeignKey("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks_Answers", "Feedback_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "EmployeeNA")
                        .WithMany("FeedbackAnswerNA")
                        .HasForeignKey("RespondentAccount_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmployeeNA");

                    b.Navigation("FeedbackNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Health_Information", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", "PersonalInformationNA")
                        .WithOne("HealthInformationNA")
                        .HasForeignKey("Proz_WebApi.Models.DesktopModels.DatabaseTables.Health_Information", "PersonalInformation_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInformationNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.LeaveRequests", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "DepartmentManagerNA")
                        .WithMany("DepartmentManagerLeaveRequestsDealsNA")
                        .HasForeignKey("DepartmentManager_FK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "HandlerEmployeeNA")
                        .WithMany("ADHRLeaveRequestsDealsNA")
                        .HasForeignKey("HandlerEmployee_FK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "EmployeeNA")
                        .WithMany("LeaveRequestsNA")
                        .HasForeignKey("Requester_Employee_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentManagerNA");

                    b.Navigation("EmployeeNA");

                    b.Navigation("HandlerEmployeeNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.LeaveRequestsHigherRole", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "HRManagerNA")
                        .WithMany("HRManagerLeaveRequestsNA")
                        .HasForeignKey("HREmployee_FK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "RequesterManagerNA")
                        .WithMany("ManagerLeaveRequestsNA")
                        .HasForeignKey("Requester_Employee_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRManagerNA");

                    b.Navigation("RequesterManagerNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.LoginHistory", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", "ExtendedIdentityUsersDesktopNA")
                        .WithMany("LoginHistroyNA")
                        .HasForeignKey("ExtendedIdentityUsersDesktop_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExtendedIdentityUsersDesktopNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Notifications", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "EmployeeNA")
                        .WithMany("NotificationsNA")
                        .HasForeignKey("Target_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Payment_Records", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", "EmployeeDepartmentsNA")
                        .WithMany("PaymentRecordsNA")
                        .HasForeignKey("EmployeeDepartments_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDepartmentsNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Performance_Recorder", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", "EmployeeDepartmentNA")
                        .WithMany("PerformanceRecordersNA")
                        .HasForeignKey("EmployeeDepartment_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", "ReviewerNA")
                        .WithMany("PerformanceRecorderNA")
                        .HasForeignKey("Reviewer_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmployeeDepartmentNA");

                    b.Navigation("ReviewerNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", "IdentityUserNA")
                        .WithOne("PersonalInformationNA")
                        .HasForeignKey("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", "IdentityUser_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUserNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Phone_Numbers", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", "PersonalInformationNA")
                        .WithMany("PhoneNumbersNA")
                        .HasForeignKey("PersonalInformation_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInformationNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.RefreshTokenDesktop", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", "UserNA")
                        .WithMany("RefreshTokensNA")
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Salary_Schedule", b =>
                {
                    b.HasOne("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", "EmployeeDepartmentNA")
                        .WithOne("SalaryScheduleNA")
                        .HasForeignKey("Proz_WebApi.Models.DesktopModels.DatabaseTables.Salary_Schedule", "EmployeeDepartment_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDepartmentNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Departments", b =>
                {
                    b.Navigation("DepartmentContactMethodsNA");

                    b.Navigation("SubDepartmentsNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employee_Departments", b =>
                {
                    b.Navigation("AttendanceRecordersNA");

                    b.Navigation("Audit_LogsNA");

                    b.Navigation("EmployeeSalaryHistoryNA");

                    b.Navigation("PaymentRecordsNA");

                    b.Navigation("PerformanceRecordersNA");

                    b.Navigation("SalaryScheduleNA")
                        .IsRequired();
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Employees", b =>
                {
                    b.Navigation("ADHRLeaveRequestsDealsNA");

                    b.Navigation("AuditLogsNA");

                    b.Navigation("DepartmentManagerLeaveRequestsDealsNA");

                    b.Navigation("FeedbackAnswerNA");

                    b.Navigation("FeedbacksNA");

                    b.Navigation("HRManagerLeaveRequestsNA");

                    b.Navigation("LeaveRequestsNA");

                    b.Navigation("ManagerAtNA");

                    b.Navigation("ManagerLeaveRequestsNA");

                    b.Navigation("NotificationsNA");

                    b.Navigation("PerformanceRecorderNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityRolesDesktop", b =>
                {
                    b.Navigation("UserRolesNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ExtendedIdentityUsersDesktop", b =>
                {
                    b.Navigation("EmployeesNA")
                        .IsRequired();

                    b.Navigation("LoginHistroyNA");

                    b.Navigation("PersonalInformationNA")
                        .IsRequired();

                    b.Navigation("RefreshTokensNA");

                    b.Navigation("UserRolesNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedback_Types", b =>
                {
                    b.Navigation("FeedbacksNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Feedbacks", b =>
                {
                    b.Navigation("FeedbacksAnswerNA")
                        .IsRequired();
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.Personal_Information", b =>
                {
                    b.Navigation("CurrentAddressNA")
                        .IsRequired();

                    b.Navigation("HealthInformationNA")
                        .IsRequired();

                    b.Navigation("PhoneNumbersNA");
                });

            modelBuilder.Entity("Proz_WebApi.Models.DesktopModels.DatabaseTables.ShiftInformationTable", b =>
                {
                    b.Navigation("BreaksTimeNA");

                    b.Navigation("EmployeeDepartmentsNA");
                });
#pragma warning restore 612, 618
        }
    }
}
